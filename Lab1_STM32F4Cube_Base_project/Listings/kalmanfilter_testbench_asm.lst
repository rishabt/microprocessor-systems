


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             myCode, CODE, READONLY
    2 00000000                 IMPORT           Kalmanfilter_asm
    3 00000000                 IMPORT           output_array_base_address
    4 00000000                 IMPORT           test_status_base_address
    5 00000000                 IMPORT           kalman_state_base_address
    6 00000000                 EXPORT           Kalmanfilter_testbench_asm
    7 00000000         
    8 00000000         Kalmanfilter_testbench_asm
    9 00000000 F000 F801       BL               test_general_case
   10 00000004 E054            B                finish
   11 00000006         
   12 00000006         
   13 00000006         
   14 00000006         
   15 00000006         
   16 00000006         
   17 00000006         test_general_case
   18 00000006         
   19 00000006 B500            PUSH             {LR}        ; Save return addre
                                                            ss 
   20 00000008         
   21 00000008         
   22 00000008 482A            LDR              R0, =input_array_base_address ;
                                                             Input array base a
                                                            ddress (read only)
   23 0000000A 492B            LDR              R1, =output_array_base_address 
                                                            ; Output array base
                                                             address (read-writ
                                                            e) 
   24 0000000C 4B2B            LDR              R3, =array_length_address
   25 0000000E 681B            LDR              R3, [R3]    ; Load array length
                                                            
   26 00000010 4A2B            LDR              R2, =kalman_state_base_address 
                                                            ; Kalman state base
                                                             address (q, r, x, 
                                                            p, k) (read-write)
   27 00000012         
   28 00000012         ;-----------------Initialize Read-Write Kalman State----
                       ----------;
   29 00000012         
   30 00000012 4C2C            LDR              R4, =kalman_state_base_address_
values 
                                                            ; temp register -> 
                                                            Kalman state values
                                                             to be stored in SR
                                                            AM
   31 00000014 6825            LDR              R5, [R4]    ; Load temp registe
                                                            r R5 with the conte
                                                            nts of the kalman_s
                                                            tate values
   32 00000016 6015            STR              R5, [R2]
   33 00000018         
   34 00000018 6865            LDR              R5, [R4, #0x04]
   35 0000001A 6055            STR              R5, [R2, #0x04]
   36 0000001C         
   37 0000001C 68A5            LDR              R5, [R4, #0x08]
   38 0000001E 6095            STR              R5, [R2, #0x08]
   39 00000020         
   40 00000020 68E5            LDR              R5, [R4, #0x0C]



ARM Macro Assembler    Page 2 


   41 00000022 60D5            STR              R5, [R2, #0x0C]
   42 00000024         
   43 00000024 6925            LDR              R5, [R4, #0x10]
   44 00000026 6115            STR              R5, [R2, #0x10]
   45 00000028         ;-------------------------------------------------------
                       -------------;
   46 00000028         
   47 00000028         
   48 00000028         ;-----------------Subroutine Call--------------;
   49 00000028         
   50 00000028 F7FF FFFE       BL               Kalmanfilter_asm
   51 0000002C         
   52 0000002C         ;----------------------------------------------;
   53 0000002C         
   54 0000002C F85D EB04       POP              {LR}        ; Pop return addres
                                                            s 
   55 00000030         
   56 00000030 4825            LDR              R0, =test_general_result ; Load
                                                             predetermined resu
                                                            lts address
   57 00000032 4921            LDR              R1, =output_array_base_address 
                                                            ; Load output array
                                                             address
   58 00000034 F04F 0200       MOV              R2, #0      ; int i
   59 00000038 4E20            LDR              R6, =array_length_address
   60 0000003A 6836            LDR              R6, [R6]    ; Load array length
                                                            
   61 0000003C         loop
   62 0000003C EB02 0300       ADD              R3, R2, R0  ; R3 = base_predete
                                                            rmined_address + i
   63 00000040 EB02 0401       ADD              R4, R2, R1  ; R4 = output_array
                                                            _address + i
   64 00000044 ED93 0A00       VLDR.F32         S0, [R3]    ; S0 = test_results
                                                            _array[i]
   65 00000048 EDD4 0A00       VLDR.F32         S1, [R4]    ; S1 = output_array
                                                            [i]
   66 0000004C EEB4 0A60       VCMP.F32         S0, S1      ; compare both resu
                                                            lts
   67 00000050 EEF1 FA10       VMRS             APSR_nzcv, FPSCR 
                                                            ; copy FPSCR   
   68 00000054 D10A            BNE              fail_test_general ; check if fa
                                                            iled tests
   69 00000056 F102 0204       ADD              R2, R2, #4  ; i++
   70 0000005A         
   71 0000005A EA4F 0592       LSR              R5, R2, #0x02 ; divide i by 4 t
                                                            o normalize to inde
                                                            x
   72 0000005E 1BAD            SUBS             R5, R5, R6  ; subtract i and le
                                                            ngth and update APS
                                                            R
   73 00000060 D1EC            BNE              loop        ; if i != length (i
                                                            n other words i<Len
                                                            gth) loop
   74 00000062         
   75 00000062 F04F 0101       MOV              R1, #1
   76 00000066 481A            LDR              R0, =test_status_base_address ;
                                                             Load Test Status A
                                                            ddress
   77 00000068 6001            STR              R1, [R0]    ; Set test to succe



ARM Macro Assembler    Page 3 


                                                            ss
   78 0000006A 4770            BX               LR
   79 0000006C         
   80 0000006C         
   81 0000006C         fail_test_general
   82 0000006C F04F 0100       MOV              R1, #0
   83 00000070 4817            LDR              R0, =test_status_base_address ;
                                                             Test Status Addres
                                                            s
   84 00000072 6001            STR              R1, [R0]    ; Set test status t
                                                            o fail
   85 00000074 4770            BX               LR
   86 00000076         
   87 00000076 00 00           ALIGN
   88 00000078 BF800000 
              3E000000 
              41F80000 
              3F880000 input_array_base_address
                               DCFS             -1, 0.125, 31.0, 1.0625
   89 00000088 3DCCCCCD 
              3DCCCCCD 
              00000000 
              3DCCCCCD 
              00000000 kalman_state_base_address_values
                               DCFS             0.1, 0.1, 0, 0.1, 0
   90 0000009C 00000004 
                       array_length_address
                               DCD              4
   91 000000A0 BF2AAAAA 
              BE2FFFFC 
              41990000 
              40FEB0E0 test_general_result
                               DCFS             0xbf2aaaaa,0xbe2ffffc,0x4199000
0,0x40feb0e0
   92 000000B0         
   93 000000B0         finish
   94 000000B0 BF00            NOP
   95 000000B2 BF00            NOP
   96 000000B4         
   97 000000B4                 END
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\kalmanfilter_testbench_asm.d -o.\objects\kalmanfilter
_testbench_asm.o -IC:\microprocessor-systems\Lab1_STM32F4Cube_Base_project\RTE 
-IC:\microprocessor-systems\Lab1_STM32F4Cube_Base_project\RTE\Device\STM32F407V
GTx -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\4.5.0\CMSIS\Include -IC:\Keil_v5\ARM\PACK\K
eil\STM32F4xx_DFP\2.7.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -IC:\Keil_v5\
ARM\PACK\Keil\STM32F4xx_DFP\2.7.0\Drivers\STM32F4xx_HAL_Driver\Inc --predefine=
"__MICROLIB SETA 1" --predefine="__UVISION_VERSION SETA 515" --predefine="_RTE_
 SETA 1" --predefine="STM32F407xx SETA 1" --list=.\listings\kalmanfilter_testbe
nch_asm.lst Sources\Kalmanfilter_testbench_asm.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Kalmanfilter_testbench_asm 00000000

Symbol: Kalmanfilter_testbench_asm
   Definitions
      At line 8 in file Sources\Kalmanfilter_testbench_asm.s
   Uses
      At line 6 in file Sources\Kalmanfilter_testbench_asm.s
Comment: Kalmanfilter_testbench_asm used once
array_length_address 0000009C

Symbol: array_length_address
   Definitions
      At line 90 in file Sources\Kalmanfilter_testbench_asm.s
   Uses
      At line 24 in file Sources\Kalmanfilter_testbench_asm.s
      At line 59 in file Sources\Kalmanfilter_testbench_asm.s

fail_test_general 0000006C

Symbol: fail_test_general
   Definitions
      At line 81 in file Sources\Kalmanfilter_testbench_asm.s
   Uses
      At line 68 in file Sources\Kalmanfilter_testbench_asm.s
Comment: fail_test_general used once
finish 000000B0

Symbol: finish
   Definitions
      At line 93 in file Sources\Kalmanfilter_testbench_asm.s
   Uses
      At line 10 in file Sources\Kalmanfilter_testbench_asm.s
Comment: finish used once
input_array_base_address 00000078

Symbol: input_array_base_address
   Definitions
      At line 88 in file Sources\Kalmanfilter_testbench_asm.s
   Uses
      At line 22 in file Sources\Kalmanfilter_testbench_asm.s
Comment: input_array_base_address used once
kalman_state_base_address_values 00000088

Symbol: kalman_state_base_address_values
   Definitions
      At line 89 in file Sources\Kalmanfilter_testbench_asm.s
   Uses
      At line 30 in file Sources\Kalmanfilter_testbench_asm.s
Comment: kalman_state_base_address_values used once
loop 0000003C

Symbol: loop
   Definitions
      At line 61 in file Sources\Kalmanfilter_testbench_asm.s
   Uses
      At line 73 in file Sources\Kalmanfilter_testbench_asm.s
Comment: loop used once
myCode 00000000




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: myCode
   Definitions
      At line 1 in file Sources\Kalmanfilter_testbench_asm.s
   Uses
      None
Comment: myCode unused
test_general_case 00000006

Symbol: test_general_case
   Definitions
      At line 17 in file Sources\Kalmanfilter_testbench_asm.s
   Uses
      At line 9 in file Sources\Kalmanfilter_testbench_asm.s
Comment: test_general_case used once
test_general_result 000000A0

Symbol: test_general_result
   Definitions
      At line 91 in file Sources\Kalmanfilter_testbench_asm.s
   Uses
      At line 56 in file Sources\Kalmanfilter_testbench_asm.s
Comment: test_general_result used once
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

Kalmanfilter_asm 00000000

Symbol: Kalmanfilter_asm
   Definitions
      At line 2 in file Sources\Kalmanfilter_testbench_asm.s
   Uses
      At line 50 in file Sources\Kalmanfilter_testbench_asm.s
Comment: Kalmanfilter_asm used once
kalman_state_base_address 00000000

Symbol: kalman_state_base_address
   Definitions
      At line 5 in file Sources\Kalmanfilter_testbench_asm.s
   Uses
      At line 26 in file Sources\Kalmanfilter_testbench_asm.s
Comment: kalman_state_base_address used once
output_array_base_address 00000000

Symbol: output_array_base_address
   Definitions
      At line 3 in file Sources\Kalmanfilter_testbench_asm.s
   Uses
      At line 23 in file Sources\Kalmanfilter_testbench_asm.s
      At line 57 in file Sources\Kalmanfilter_testbench_asm.s

test_status_base_address 00000000

Symbol: test_status_base_address
   Definitions
      At line 4 in file Sources\Kalmanfilter_testbench_asm.s
   Uses
      At line 76 in file Sources\Kalmanfilter_testbench_asm.s
      At line 83 in file Sources\Kalmanfilter_testbench_asm.s

4 symbols
351 symbols in table
